// src/events/autoModHandler.js - Spam korumasÄ± eklenmiÅŸ

const { EmbedBuilder, PermissionFlagsBits } = require('discord.js');
const database = require('../modules/database');

// KullanÄ±cÄ± mesaj geÃ§miÅŸini saklayacak Map
const userMessageCounts = new Map();

module.exports = {
    name: 'messageCreate',
    once: false,
    async execute(message) {
        try {
            // Bot mesajlarÄ±nÄ± yoksay
            if (message.author.bot) return;
            
            // DM mesajlarÄ±nÄ± yoksay
            if (!message.guild) return;
            
            // AutoMod konfigÃ¼rasyonunu al
            const config = await database.get(
                'SELECT * FROM automod_configs WHERE guild_id = ?',
                [message.guild.id]
            );
            
            // AutoMod aktif deÄŸilse veya yapÄ±landÄ±rma yoksa Ã§Ä±k
            if (!config || !config.enabled) return;
            
            // ----- YASAKLI KELÄ°ME KONTROLÃœ -----
            if (config.banned_words) {
                // YasaklÄ± kelimeleri parse et
                const bannedWords = JSON.parse(config.banned_words || '[]');
                
                // YasaklÄ± kelime varsa, kontrol et
                if (bannedWords.length > 0) {
                    // MesajÄ± kontrol et
                    const content = message.content.toLowerCase();
                    
                    // Hangi yasaklÄ± kelimenin bulunduÄŸunu kontrol et
                    let foundBannedWord = null;
                    for (const word of bannedWords) {
                        if (content.includes(word.toLowerCase())) {
                            foundBannedWord = word;
                            break;
                        }
                    }
                    
                    // YasaklÄ± kelime varsa mesajÄ± sil ve uyarÄ± gÃ¶nder
                    if (foundBannedWord) {
                        try {
                            // MesajÄ± sil
                            await message.delete();
                            
                            // Bulunan yasaklÄ± kelimeyi maskele (Ã¶rn: a**e)
                            const maskedWord = foundBannedWord.length <= 2 
                                ? foundBannedWord 
                                : foundBannedWord[0] + '*'.repeat(foundBannedWord.length - 2) + foundBannedWord[foundBannedWord.length - 1];
                            
                            // UyarÄ± embedini oluÅŸtur
                            const warningEmbed = new EmbedBuilder()
                                .setColor('#FF0000')
                                .setTitle('ğŸ›‘ AutoMod UyarÄ±sÄ±')
                                .setDescription(`<@${message.author.id}>, mesajÄ±nÄ±z yasaklÄ± kelime iÃ§erdiÄŸi iÃ§in silindi.`)
                                .addFields(
                                    { name: 'KullanÄ±cÄ±', value: `${message.author.tag} (${message.author.id})`, inline: true },
                                    { name: 'Kanal', value: `<#${message.channel.id}>`, inline: true },
                                    { name: 'YasaklÄ± Kelime', value: maskedWord, inline: true }
                                )
                                .setTimestamp()
                                .setFooter({ text: 'AutoMod Sistemi' });
                            
                            // MesajÄ±n gÃ¶nderildiÄŸi kanala uyarÄ± gÃ¶nder
                            const warningMessage = await message.channel.send({ embeds: [warningEmbed] });
                            
                            // UyarÄ± mesajÄ±nÄ± belirli bir sÃ¼re sonra sil (5 saniye)
                            setTimeout(() => {
                                warningMessage.delete().catch(err => {
                                    // Mesaj zaten silinmiÅŸse sessizce devam et
                                    console.error('UyarÄ± mesajÄ± silme hatasÄ±:', err);
                                });
                            }, 5000); // 5 saniye (5000 ms)
                            
                            console.log(`AutoMod: ${message.author.tag} tarafÄ±ndan gÃ¶nderilen yasaklÄ± kelime iÃ§eren mesaj silindi.`);
                            
                            // YasaklÄ± kelime bulunduÄŸu iÃ§in diÄŸer kontrolleri yapmaya gerek yok
                            return;
                        } catch (deleteError) {
                            console.error('AutoMod: Mesaj silme hatasÄ±:', deleteError);
                        }
                    }
                }
            }
            
            // ----- SPAM KONTROLÃœ -----
            if (config.spam_protection) {
                const userId = message.author.id;
                const now = Date.now();
                
                // KullanÄ±cÄ±nÄ±n mesaj sayacÄ±nÄ± al veya oluÅŸtur
                if (!userMessageCounts.has(userId)) {
                    userMessageCounts.set(userId, {
                        count: 0,
                        firstMessage: now,
                        messages: []
                    });
                }
                
                const userData = userMessageCounts.get(userId);
                
                // Zamanlama penceresi dÄ±ÅŸÄ±ndaki mesajlarÄ± temizle
                userData.messages = userData.messages.filter(
                    timestamp => now - timestamp < config.spam_interval
                );
                
                // Yeni mesajÄ± ekle
                userData.messages.push(now);
                
                // EÄŸer kullanÄ±cÄ± belirtilen sÃ¼re iÃ§inde threshold'dan fazla mesaj attÄ±ysa
                if (userData.messages.length >= config.spam_threshold) {
                    // Map'ten kullanÄ±cÄ±yÄ± temizle
                    userMessageCounts.delete(userId);
                    
                    try {
                        // KullanÄ±cÄ±yÄ± sustur
                        const member = await message.guild.members.fetch(userId);
                        
                        // Bot yetkisini kontrol et
                        if (!message.guild.members.me.permissions.has(PermissionFlagsBits.ModerateMembers)) {
                            console.log('Bot, kullanÄ±cÄ±larÄ± susturmak iÃ§in gerekli yetkiye sahip deÄŸil!');
                            return;
                        }
                        
                        // KullanÄ±cÄ±yÄ± sustur
                        await member.timeout(config.spam_timeout, 'AutoMod: Spam yapma');
                        
                        // Spam uyarÄ±sÄ± gÃ¶nder
                        const spamEmbed = new EmbedBuilder()
                            .setColor('#FF0000')
                            .setTitle('ğŸ”‡ Spam Tespit Edildi')
                            .setDescription(`<@${userId}>, Ã§ok fazla mesaj gÃ¶nderdiÄŸiniz iÃ§in **${config.spam_timeout / 60000} dakika** sÃ¼reyle susturuldunuz.`)
                            .addFields(
                                { name: 'KullanÄ±cÄ±', value: `${message.author.tag} (${message.author.id})`, inline: true },
                                { name: 'Kanal', value: `<#${message.channel.id}>`, inline: true },
                                { name: 'SÃ¼re', value: `${config.spam_timeout / 60000} dakika`, inline: true }
                            )
                            .setTimestamp()
                            .setFooter({ text: 'AutoMod Spam KorumasÄ±' });
                        
                        const spamWarning = await message.channel.send({ embeds: [spamEmbed] });
                        
                        // UyarÄ± mesajÄ±nÄ± 10 saniye sonra sil
                        setTimeout(() => {
                            spamWarning.delete().catch(err => {
                                console.error('Spam uyarÄ±sÄ± silme hatasÄ±:', err);
                            });
                        }, 10000); // 10 saniye
                        
                        console.log(`AutoMod: ${message.author.tag} spam yaptÄ±ÄŸÄ± iÃ§in ${config.spam_timeout / 60000} dakika susturuldu.`);
                        
                    } catch (timeoutError) {
                        console.error('KullanÄ±cÄ± susturma hatasÄ±:', timeoutError);
                    }
                }
            }
            
        } catch (error) {
            console.error('AutoMod iÅŸleyici hatasÄ±:', error);
        }
    }
};

// Periyodik olarak eski verileri temizle (memory leak'i Ã¶nlemek iÃ§in)
setInterval(() => {
    const now = Date.now();
    
    // En az 30 dakika boyunca aktif olmayan kullanÄ±cÄ±larÄ± Map'ten temizle
    for (const [userId, userData] of userMessageCounts.entries()) {
        const lastMessageTime = Math.max(...userData.messages, 0);
        if (now - lastMessageTime > 30 * 60 * 1000) { // 30 dakika
            userMessageCounts.delete(userId);
        }
    }
}, 15 * 60 * 1000); // 15 dakikada bir kontrol et